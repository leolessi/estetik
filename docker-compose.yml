version: '3.8'

services:
  # Aplicação Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinic_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      DB_HOST: mongodb
      DB_PORT: 27017
      DB_NAME: agendamento
      DB_USER: clinic_user
      DB_PASS: clinic_pass
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - clinic_network
    volumes:
      - ./public:/app/public  # Para desenvolvimento (opcional)

  # Banco de dados MongoDB
  mongodb:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: clinic_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: clinic123
      MONGO_INITDB_DATABASE: agendamento
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - clinic_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Interface web do MongoDB (opcional)
  mongo-express:
    image: mongo-express:latest
    container_name: clinic_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: clinic123
      ME_CONFIG_MONGODB_URL: mongodb://admin:clinic123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: clinic123
    depends_on:
      - mongodb
    networks:
      - clinic_network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  clinic_network:
    driver: bridge
